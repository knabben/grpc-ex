// Code generated by protoc-gen-go. DO NOT EDIT.
// source: damage.proto

/*
Package damage is a generated protocol buffer package.

It is generated from these files:
	damage.proto

It has these top-level messages:
	DamageMessage
*/
package damage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DamageMessage struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *DamageMessage) Reset()                    { *m = DamageMessage{} }
func (m *DamageMessage) String() string            { return proto.CompactTextString(m) }
func (*DamageMessage) ProtoMessage()               {}
func (*DamageMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DamageMessage) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*DamageMessage)(nil), "damage.DamageMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DamageService service

type DamageServiceClient interface {
	Damage(ctx context.Context, in *DamageMessage, opts ...grpc.CallOption) (*DamageMessage, error)
}

type damageServiceClient struct {
	cc *grpc.ClientConn
}

func NewDamageServiceClient(cc *grpc.ClientConn) DamageServiceClient {
	return &damageServiceClient{cc}
}

func (c *damageServiceClient) Damage(ctx context.Context, in *DamageMessage, opts ...grpc.CallOption) (*DamageMessage, error) {
	out := new(DamageMessage)
	err := grpc.Invoke(ctx, "/damage.DamageService/Damage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DamageService service

type DamageServiceServer interface {
	Damage(context.Context, *DamageMessage) (*DamageMessage, error)
}

func RegisterDamageServiceServer(s *grpc.Server, srv DamageServiceServer) {
	s.RegisterService(&_DamageService_serviceDesc, srv)
}

func _DamageService_Damage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DamageMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DamageServiceServer).Damage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/damage.DamageService/Damage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DamageServiceServer).Damage(ctx, req.(*DamageMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _DamageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "damage.DamageService",
	HandlerType: (*DamageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Damage",
			Handler:    _DamageService_Damage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "damage.proto",
}

func init() { proto.RegisterFile("damage.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x49, 0xcc, 0x4d,
	0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0xa4, 0x64, 0xd2, 0xf3,
	0xf3, 0xd3, 0x73, 0x52, 0xf5, 0x13, 0x0b, 0x32, 0xf5, 0x13, 0xf3, 0xf2, 0xf2, 0x4b, 0x12, 0x4b,
	0x32, 0xf3, 0xf3, 0x8a, 0x21, 0xaa, 0x94, 0x54, 0xb9, 0x78, 0x5d, 0xc0, 0xea, 0x7c, 0x53, 0x8b,
	0x8b, 0x13, 0xd3, 0x53, 0x85, 0x44, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0x20, 0x1c, 0xa3, 0x38, 0x98, 0xb2, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4,
	0x54, 0x21, 0x5f, 0x2e, 0x36, 0x88, 0x80, 0x90, 0xa8, 0x1e, 0xd4, 0x5a, 0x14, 0x73, 0xa4, 0xb0,
	0x0b, 0x2b, 0x89, 0x36, 0x5d, 0x7e, 0x32, 0x99, 0x89, 0x5f, 0x89, 0x4b, 0xbf, 0xcc, 0x50, 0x1f,
	0xa2, 0xc2, 0x8a, 0x51, 0x2b, 0x89, 0x0d, 0xec, 0x1a, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x9b, 0x37, 0xd6, 0x51, 0xc3, 0x00, 0x00, 0x00,
}
